{"remainingRequest":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/src/components/Map1.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/src/components/Map1.vue","mtime":1602479691586},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/css-loader/dist/cjs.js","mtime":1602479446036},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1602479445284},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/postcss-loader/src/index.js","mtime":1602479446408},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/cache-loader/dist/cjs.js","mtime":1602479446384},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/vue-loader/lib/index.js","mtime":1602479445280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnaHR0cHM6Ly9hcGkubWFwYm94LmNvbS9tYXBib3gtZ2wtanMvdjEuMTIuMC9tYXBib3gtZ2wuY3NzJzsK"},{"version":3,"sources":["Map1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA","file":"Map1.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id='map' style='width: 600px; height: 480px;'></div>\n</template>\n\n\n<script>\n  import mapboxgl from 'mapbox-gl';\n  import axios from 'axios';\n\n  var MapMixin =  {\n    name: 'Map1',\n    props: {\n      msg: String,\n    },\n    $_map: null,  // does this help?\n    $_pois:[], // does this help?\n    mounted(){\n      // Fetch data from data server.\n      this.$_pois = [];\n      fetch_data(this);\n      // init Mapbox\n      mapboxgl.accessToken = 'pk.eyJ1IjoibW9vMSIsImEiOiJja2Z6MG5tZzgwaHJjMzRudHdqY3N5aG05In0.L_YIvkoB67ATZVDHOZXDSg';\n      this.$_map = new mapboxgl.Map({\n          container: 'map',\n          style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n          center: [-74.5, 40], // starting position [lng, lat]\n          zoom: 10 // starting zoom\n      });\n      var nav = new mapboxgl.NavigationControl();\n      this.$_map.addControl(nav, 'top-left');\n\n    }\n  }\n\n  function fetch_data(obj) {\n    const data_url = 'https://gist.githubusercontent.com/lbud/35e4847d13e5524d08d3e547318cf689/raw/d44940c13e70b2bb683345c511f85d249ee5ccfc/starbucks.csv';\n    axios.get(data_url, {\n      params: {},\n    }).then(({ data }) => {\n      // split into lines\n      let lines = 0;\n      for (var l of data.split(\"\\n\")) {\n        // skip the first line\n        if (lines>0) {\n          let sb = {\n            phone_number: '',\n            street: '',\n            city: '',\n            lat: 0.0,\n            lng: 0.0\n          };\n          // split by comma\n          let items = parse_csv(l);\n          //console.log(items);\n          if (items.length==19) {\n            sb.phone_number = items[5];\n            sb.street = items[7];\n            sb.city = items[11];\n            sb.lat = parseFloat(items[14]);\n            sb.lng = parseFloat(items[15]);\n            obj.$_pois.push(sb);\n            console.log(sb);\n            // adding a marker\n            var marker = new mapboxgl.Marker({color:'#00704a'});\n            marker.setLngLat([sb.lng, sb.lat]);\n            marker.setPopup(new mapboxgl.Popup().\n              setHTML(`<div class=\"poipopup\">Address: ${sb.street}</div>\n                       <div class=\"poipopup\">Phone: ${sb.phone_number}</div`));\n            marker.addTo(obj.$_map);\n          }\n        }\n        lines++;\n      }\n      // move the center\n      let c = center(obj.$_pois);\n      obj.$_map.setCenter([c[1], c[0]]);\n    });\n\n  }\n\n  // average of Lat/Lng\n  function center(pois) {\n    let n = pois.length;\n    let lat = 0.0;\n    let lng = 0.0;\n    for (let p of pois) {\n      lat += p.lat;\n      lng += p.lng;\n    }\n    return [lat/n, lng/n];\n  }\n\n  //\n  function parse_csv(str) {\n    let cs = str.split(',');\n    let tmps = \"\";\n    let result = [];\n    for (var itm of cs) {\n      let s = itm.trim();\n      if (tmps.length>0) {\n        tmps += s;\n        if (s.charAt(s.length-1)==='\"') {\n          // closing quote\n          result.push(tmps.substr(0, s.length-2));\n          tmps = '';\n        }\n      } else if (s.charAt(0)==='\"') {\n        // starting quote\n        tmps = s.substr(1, s.length-1);\n      } else {\n        result.push(s);\n      }\n    }\n    return result;\n  }\n  // test...\n  //console.log(parse_csv('US,15298,Grand Central,Starbucks,7800-67600,212-370-4161,CO,\"7800 Grand Central Station, Track 35, Grand Central Station\",7800 Grand Central Station,Track 35,Grand Central Station,New York,NY,10017,40.753669738769531,-73.976791381835938,Eastern Standard Time,-300,GMT-05:00 America/New_York'));\n  //console.log(parse_csv('US,6590,88th & Broadway,Starbucks,14498-121264,212-595-3404,CO,2394 Broadway,2394 Broadway,,,New York,NY,100241703,40.789287567138672,-73.975326538085938,Eastern Standard Time,-300,GMT-05:00 America/New_York'));\n\n  export default MapMixin;\n</script>\n\n<style >\n@import 'https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css';\n</style>\n\n<style >\n.poipopup {\n  font-size: 0.9em;\n  color:#777;\n}\n</style>\n"]}]}