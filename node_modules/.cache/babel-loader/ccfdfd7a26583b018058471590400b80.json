{"remainingRequest":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/babel-loader/lib/index.js!/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/src/components/Map1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/src/components/Map1.vue","mtime":1602479691586},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/cache-loader/dist/cjs.js","mtime":1602479446384},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/babel-loader/lib/index.js","mtime":1602479446372},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/cache-loader/dist/cjs.js","mtime":1602479446384},{"path":"/home/lubuntu/src/nodejs/mapjs/mapbojs_testapp/node_modules/vue-loader/lib/index.js","mtime":1602479445280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvaG9tZS9sdWJ1bnR1L3NyYy9ub2RlanMvbWFwanMvbWFwYm9qc190ZXN0YXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1hcGJveGdsIGZyb20gJ21hcGJveC1nbCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciBNYXBNaXhpbiA9IHsKICBuYW1lOiAnTWFwMScsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nCiAgfSwKICAkX21hcDogbnVsbCwKICAvLyBkb2VzIHRoaXMgaGVscD8KICAkX3BvaXM6IFtdLAogIC8vIGRvZXMgdGhpcyBoZWxwPwogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBGZXRjaCBkYXRhIGZyb20gZGF0YSBzZXJ2ZXIuCiAgICB0aGlzLiRfcG9pcyA9IFtdOwogICAgZmV0Y2hfZGF0YSh0aGlzKTsgLy8gaW5pdCBNYXBib3gKCiAgICBtYXBib3hnbC5hY2Nlc3NUb2tlbiA9ICdway5leUoxSWpvaWJXOXZNU0lzSW1FaU9pSmphMlo2TUc1dFp6Z3dhSEpqTXpSdWRIZHFZM041YUcwNUluMC5MX1lJdmtvQjY3QVRaVkRIT1pYRFNnJzsKICAgIHRoaXMuJF9tYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHsKICAgICAgY29udGFpbmVyOiAnbWFwJywKICAgICAgc3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L3N0cmVldHMtdjExJywKICAgICAgLy8gc3R5bGVzaGVldCBsb2NhdGlvbgogICAgICBjZW50ZXI6IFstNzQuNSwgNDBdLAogICAgICAvLyBzdGFydGluZyBwb3NpdGlvbiBbbG5nLCBsYXRdCiAgICAgIHpvb206IDEwIC8vIHN0YXJ0aW5nIHpvb20KCiAgICB9KTsKICAgIHZhciBuYXYgPSBuZXcgbWFwYm94Z2wuTmF2aWdhdGlvbkNvbnRyb2woKTsKICAgIHRoaXMuJF9tYXAuYWRkQ29udHJvbChuYXYsICd0b3AtbGVmdCcpOwogIH0KfTsKCmZ1bmN0aW9uIGZldGNoX2RhdGEob2JqKSB7CiAgdmFyIGRhdGFfdXJsID0gJ2h0dHBzOi8vZ2lzdC5naXRodWJ1c2VyY29udGVudC5jb20vbGJ1ZC8zNWU0ODQ3ZDEzZTU1MjRkMDhkM2U1NDczMThjZjY4OS9yYXcvZDQ0OTQwYzEzZTcwYjJiYjY4MzM0NWM1MTFmODVkMjQ5ZWU1Y2NmYy9zdGFyYnVja3MuY3N2JzsKICBheGlvcy5nZXQoZGF0YV91cmwsIHsKICAgIHBhcmFtczoge30KICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgIC8vIHNwbGl0IGludG8gbGluZXMKICAgIHZhciBsaW5lcyA9IDA7CgogICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGRhdGEuc3BsaXQoIlxuIikpLAogICAgICAgIF9zdGVwOwoKICAgIHRyeSB7CiAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgdmFyIGwgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgLy8gc2tpcCB0aGUgZmlyc3QgbGluZQogICAgICAgIGlmIChsaW5lcyA+IDApIHsKICAgICAgICAgIHZhciBzYiA9IHsKICAgICAgICAgICAgcGhvbmVfbnVtYmVyOiAnJywKICAgICAgICAgICAgc3RyZWV0OiAnJywKICAgICAgICAgICAgY2l0eTogJycsCiAgICAgICAgICAgIGxhdDogMC4wLAogICAgICAgICAgICBsbmc6IDAuMAogICAgICAgICAgfTsgLy8gc3BsaXQgYnkgY29tbWEKCiAgICAgICAgICB2YXIgaXRlbXMgPSBwYXJzZV9jc3YobCk7IC8vY29uc29sZS5sb2coaXRlbXMpOwoKICAgICAgICAgIGlmIChpdGVtcy5sZW5ndGggPT0gMTkpIHsKICAgICAgICAgICAgc2IucGhvbmVfbnVtYmVyID0gaXRlbXNbNV07CiAgICAgICAgICAgIHNiLnN0cmVldCA9IGl0ZW1zWzddOwogICAgICAgICAgICBzYi5jaXR5ID0gaXRlbXNbMTFdOwogICAgICAgICAgICBzYi5sYXQgPSBwYXJzZUZsb2F0KGl0ZW1zWzE0XSk7CiAgICAgICAgICAgIHNiLmxuZyA9IHBhcnNlRmxvYXQoaXRlbXNbMTVdKTsKICAgICAgICAgICAgb2JqLiRfcG9pcy5wdXNoKHNiKTsKICAgICAgICAgICAgY29uc29sZS5sb2coc2IpOyAvLyBhZGRpbmcgYSBtYXJrZXIKCiAgICAgICAgICAgIHZhciBtYXJrZXIgPSBuZXcgbWFwYm94Z2wuTWFya2VyKHsKICAgICAgICAgICAgICBjb2xvcjogJyMwMDcwNGEnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBtYXJrZXIuc2V0TG5nTGF0KFtzYi5sbmcsIHNiLmxhdF0pOwogICAgICAgICAgICBtYXJrZXIuc2V0UG9wdXAobmV3IG1hcGJveGdsLlBvcHVwKCkuc2V0SFRNTCgiPGRpdiBjbGFzcz1cInBvaXBvcHVwXCI+QWRkcmVzczogIi5jb25jYXQoc2Iuc3RyZWV0LCAiPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicG9pcG9wdXBcIj5QaG9uZTogIikuY29uY2F0KHNiLnBob25lX251bWJlciwgIjwvZGl2IikpKTsKICAgICAgICAgICAgbWFya2VyLmFkZFRvKG9iai4kX21hcCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBsaW5lcysrOwogICAgICB9IC8vIG1vdmUgdGhlIGNlbnRlcgoKICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KCiAgICB2YXIgYyA9IGNlbnRlcihvYmouJF9wb2lzKTsKICAgIG9iai4kX21hcC5zZXRDZW50ZXIoW2NbMV0sIGNbMF1dKTsKICB9KTsKfSAvLyBhdmVyYWdlIG9mIExhdC9MbmcKCgpmdW5jdGlvbiBjZW50ZXIocG9pcykgewogIHZhciBuID0gcG9pcy5sZW5ndGg7CiAgdmFyIGxhdCA9IDAuMDsKICB2YXIgbG5nID0gMC4wOwoKICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHBvaXMpLAogICAgICBfc3RlcDI7CgogIHRyeSB7CiAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICB2YXIgcCA9IF9zdGVwMi52YWx1ZTsKICAgICAgbGF0ICs9IHAubGF0OwogICAgICBsbmcgKz0gcC5sbmc7CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yMi5mKCk7CiAgfQoKICByZXR1cm4gW2xhdCAvIG4sIGxuZyAvIG5dOwp9IC8vCgoKZnVuY3Rpb24gcGFyc2VfY3N2KHN0cikgewogIHZhciBjcyA9IHN0ci5zcGxpdCgnLCcpOwogIHZhciB0bXBzID0gIiI7CiAgdmFyIHJlc3VsdCA9IFtdOwoKICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGNzKSwKICAgICAgX3N0ZXAzOwoKICB0cnkgewogICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgdmFyIGl0bSA9IF9zdGVwMy52YWx1ZTsKICAgICAgdmFyIHMgPSBpdG0udHJpbSgpOwoKICAgICAgaWYgKHRtcHMubGVuZ3RoID4gMCkgewogICAgICAgIHRtcHMgKz0gczsKCiAgICAgICAgaWYgKHMuY2hhckF0KHMubGVuZ3RoIC0gMSkgPT09ICciJykgewogICAgICAgICAgLy8gY2xvc2luZyBxdW90ZQogICAgICAgICAgcmVzdWx0LnB1c2godG1wcy5zdWJzdHIoMCwgcy5sZW5ndGggLSAyKSk7CiAgICAgICAgICB0bXBzID0gJyc7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHMuY2hhckF0KDApID09PSAnIicpIHsKICAgICAgICAvLyBzdGFydGluZyBxdW90ZQogICAgICAgIHRtcHMgPSBzLnN1YnN0cigxLCBzLmxlbmd0aCAtIDEpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdC5wdXNoKHMpOwogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyKSB7CiAgICBfaXRlcmF0b3IzLmUoZXJyKTsKICB9IGZpbmFsbHkgewogICAgX2l0ZXJhdG9yMy5mKCk7CiAgfQoKICByZXR1cm4gcmVzdWx0Owp9IC8vIHRlc3QuLi4KLy9jb25zb2xlLmxvZyhwYXJzZV9jc3YoJ1VTLDE1Mjk4LEdyYW5kIENlbnRyYWwsU3RhcmJ1Y2tzLDc4MDAtNjc2MDAsMjEyLTM3MC00MTYxLENPLCI3ODAwIEdyYW5kIENlbnRyYWwgU3RhdGlvbiwgVHJhY2sgMzUsIEdyYW5kIENlbnRyYWwgU3RhdGlvbiIsNzgwMCBHcmFuZCBDZW50cmFsIFN0YXRpb24sVHJhY2sgMzUsR3JhbmQgQ2VudHJhbCBTdGF0aW9uLE5ldyBZb3JrLE5ZLDEwMDE3LDQwLjc1MzY2OTczODc2OTUzMSwtNzMuOTc2NzkxMzgxODM1OTM4LEVhc3Rlcm4gU3RhbmRhcmQgVGltZSwtMzAwLEdNVC0wNTowMCBBbWVyaWNhL05ld19Zb3JrJykpOwovL2NvbnNvbGUubG9nKHBhcnNlX2NzdignVVMsNjU5MCw4OHRoICYgQnJvYWR3YXksU3RhcmJ1Y2tzLDE0NDk4LTEyMTI2NCwyMTItNTk1LTM0MDQsQ08sMjM5NCBCcm9hZHdheSwyMzk0IEJyb2Fkd2F5LCwsTmV3IFlvcmssTlksMTAwMjQxNzAzLDQwLjc4OTI4NzU2NzEzODY3MiwtNzMuOTc1MzI2NTM4MDg1OTM4LEVhc3Rlcm4gU3RhbmRhcmQgVGltZSwtMzAwLEdNVC0wNTowMCBBbWVyaWNhL05ld19Zb3JrJykpOwoKCmV4cG9ydCBkZWZhdWx0IE1hcE1peGluOw=="},{"version":3,"sources":["Map1.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id='map' style='width: 600px; height: 480px;'></div>\n</template>\n\n\n<script>\n  import mapboxgl from 'mapbox-gl';\n  import axios from 'axios';\n\n  var MapMixin =  {\n    name: 'Map1',\n    props: {\n      msg: String,\n    },\n    $_map: null,  // does this help?\n    $_pois:[], // does this help?\n    mounted(){\n      // Fetch data from data server.\n      this.$_pois = [];\n      fetch_data(this);\n      // init Mapbox\n      mapboxgl.accessToken = 'pk.eyJ1IjoibW9vMSIsImEiOiJja2Z6MG5tZzgwaHJjMzRudHdqY3N5aG05In0.L_YIvkoB67ATZVDHOZXDSg';\n      this.$_map = new mapboxgl.Map({\n          container: 'map',\n          style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n          center: [-74.5, 40], // starting position [lng, lat]\n          zoom: 10 // starting zoom\n      });\n      var nav = new mapboxgl.NavigationControl();\n      this.$_map.addControl(nav, 'top-left');\n\n    }\n  }\n\n  function fetch_data(obj) {\n    const data_url = 'https://gist.githubusercontent.com/lbud/35e4847d13e5524d08d3e547318cf689/raw/d44940c13e70b2bb683345c511f85d249ee5ccfc/starbucks.csv';\n    axios.get(data_url, {\n      params: {},\n    }).then(({ data }) => {\n      // split into lines\n      let lines = 0;\n      for (var l of data.split(\"\\n\")) {\n        // skip the first line\n        if (lines>0) {\n          let sb = {\n            phone_number: '',\n            street: '',\n            city: '',\n            lat: 0.0,\n            lng: 0.0\n          };\n          // split by comma\n          let items = parse_csv(l);\n          //console.log(items);\n          if (items.length==19) {\n            sb.phone_number = items[5];\n            sb.street = items[7];\n            sb.city = items[11];\n            sb.lat = parseFloat(items[14]);\n            sb.lng = parseFloat(items[15]);\n            obj.$_pois.push(sb);\n            console.log(sb);\n            // adding a marker\n            var marker = new mapboxgl.Marker({color:'#00704a'});\n            marker.setLngLat([sb.lng, sb.lat]);\n            marker.setPopup(new mapboxgl.Popup().\n              setHTML(`<div class=\"poipopup\">Address: ${sb.street}</div>\n                       <div class=\"poipopup\">Phone: ${sb.phone_number}</div`));\n            marker.addTo(obj.$_map);\n          }\n        }\n        lines++;\n      }\n      // move the center\n      let c = center(obj.$_pois);\n      obj.$_map.setCenter([c[1], c[0]]);\n    });\n\n  }\n\n  // average of Lat/Lng\n  function center(pois) {\n    let n = pois.length;\n    let lat = 0.0;\n    let lng = 0.0;\n    for (let p of pois) {\n      lat += p.lat;\n      lng += p.lng;\n    }\n    return [lat/n, lng/n];\n  }\n\n  //\n  function parse_csv(str) {\n    let cs = str.split(',');\n    let tmps = \"\";\n    let result = [];\n    for (var itm of cs) {\n      let s = itm.trim();\n      if (tmps.length>0) {\n        tmps += s;\n        if (s.charAt(s.length-1)==='\"') {\n          // closing quote\n          result.push(tmps.substr(0, s.length-2));\n          tmps = '';\n        }\n      } else if (s.charAt(0)==='\"') {\n        // starting quote\n        tmps = s.substr(1, s.length-1);\n      } else {\n        result.push(s);\n      }\n    }\n    return result;\n  }\n  // test...\n  //console.log(parse_csv('US,15298,Grand Central,Starbucks,7800-67600,212-370-4161,CO,\"7800 Grand Central Station, Track 35, Grand Central Station\",7800 Grand Central Station,Track 35,Grand Central Station,New York,NY,10017,40.753669738769531,-73.976791381835938,Eastern Standard Time,-300,GMT-05:00 America/New_York'));\n  //console.log(parse_csv('US,6590,88th & Broadway,Starbucks,14498-121264,212-595-3404,CO,2394 Broadway,2394 Broadway,,,New York,NY,100241703,40.789287567138672,-73.975326538085938,Eastern Standard Time,-300,GMT-05:00 America/New_York'));\n\n  export default MapMixin;\n</script>\n\n<style >\n@import 'https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css';\n</style>\n\n<style >\n.poipopup {\n  font-size: 0.9em;\n  color:#777;\n}\n</style>\n"],"sourceRoot":"src/components"}]}